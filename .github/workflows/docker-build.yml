name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_KEY: ${{ secrets.EC2_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Debug environment variables
        run: |
          echo "DOCKER_USERNAME=${DOCKER_USERNAME}"
          echo "DOCKER_PASSWORD=${DOCKER_PASSWORD}"
          echo "EC2_HOST=${EC2_HOST}"
          echo "EC2_KEY=${EC2_KEY}"

      - name: Decode and save EC2 private key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 --decode > ec2-private-key.pem
          chmod 600 ec2-private-key.pem

      - name: SSH into EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ec2-private-key.pem ec2-user@${EC2_HOST}

      - name: Build Docker image
        run: |
          docker build -t task-frontend .

      - name: Stop previous Docker container (if running)
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ec2-private-key.pem ec2-user@${EC2_HOST} "docker stop task-frontend || true"

      - name: Remove previous Docker container (if exists)
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ec2-private-key.pem ec2-user@${EC2_HOST} "docker rm task-frontend || true"

      - name: Run new Docker container
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ec2-private-key.pem ec2-user@${EC2_HOST} "sudo docker run -d -p 3000:3000 --name task-frontend --restart unless-stopped task-frontend"
